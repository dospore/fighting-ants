Basic notes taken during development, have not cross checked so might be some outdated things

1. Construct world
The world will contain a mapping from Colony -> ColonyState as well as a list of Ants
```
    type Colony = string

    type ColonyState = {
        north: string | undefined,
        south: string | undefined,
        east: string | undefined,
        west: string | undefined,
    }

    type Ant = {
        location: Colony
    }

    type World {
        state: Map<Colony, ColonyState>,
        ants: Ant[]
    }
```

2. Each round will move the ants randomly.
Available directions are non undefined values, as well truthy values for state.get(direction). 
Move an ant, when two ants are marked at a location we will remove that location from the Map
// no need to follow the paths back to the ants previous location since we can just remove once we get to it in cleanup / write stage
// This approach has a worse time complexity since at the end I have to loop through M remaining colonies and clean them

3. Continue step two until all the ants are dead or there has been 10k iterations

4. Print out the remaining state of the world
